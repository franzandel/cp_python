# My Solution
# Time Complexity: O(n)
# Space Complexity: O(1)
# def findMiddle(self, head):
#     # TODO: Write your code here
#     slow, fast = head, head
#     length = 1
#     slowIndex = 0
#     while fast is not None and fast.next is not None:
#       fast = fast.next.next
#       slow = slow.next

#       length += 2
#       slowIndex += 1

#     while slowIndex == length / 2:
#       slowIndex += 1

#     return slow

# Designgurus Solution
# Time Complexity: O(n)
# Space Complexity: O(1)
def findMiddle(self, head):
    # TODO: Write your code here
    slow, fast = head, head
    while fast is not None and fast.next is not None:
      fast = fast.next.next
      slow = slow.next

    return slow