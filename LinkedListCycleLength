# Designgurus Solution
# Time Complexity : O(n)
# Space Complexity : O(1)
def find_cycle_length(self, head):
    slow, fast = head, head
    while fast is not None and fast.next is not None:
      fast = fast.next.next
      slow = slow.next
      if slow == fast:  # found the cycle
        return self.calculate_cycle_length(slow)

    return 0


def calculate_cycle_length(self, slow):
    current = slow
    cycle_length = 0
    while True:
      current = current.next
      cycle_length += 1
      if current == slow:
        break
    return cycle_length