# My Solution
# Time Complexity : O(n)
# Space Complexity : O(1)
def findLength(fruits):
      max_length = 0
      # TODO: Write your code here
      # define left and right = 0
      # define hashmap
      # while right < len(fruits)
      # if len(hashMap) <= 2:
      # insert into hashmap
      # while len(hashMap) > 2:
      # remove from hashMap
      # left += 1
      # max(max_length, right - left + 1)
      # right += 1
      left, right = 0, 0
      hashMap = {}

      while right < len(fruits):
        if len(hashMap) <= 2:
          hashMap[fruits[right]] = hashMap.get(fruits[right], 0) + 1

        while len(hashMap) > 2:
          hashMap[fruits[left]] -= 1

          if hashMap[fruits[left]] == 0:
            hashMap.pop(fruits[left])

          left += 1

        max_length = max(max_length, right - left + 1)
        right += 1

      return max_length

if __name__ == "__main__":
    arrayLength = int(input())
    fruits = [int(x) for x in input().split()]
    print(findLength(fruits))