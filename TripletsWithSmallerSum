# My Solution mix with Designgurus
# Time Complexity = O(n2)
# Space Complexity = O(n)
def searchTriplets(arr, target):
    count = 0
    if len(arr) < 3: return count
    # TODO: Write your code here
    arr.sort()

    for i in range(len(arr) - 1):
        count += binary(i, i + 1, arr, target)

    return count

def binary(current, next, arr, target):
    smallerSumCount = 0
    right = len(arr) - 1

    while next < right:
        currentSum = arr[current] + arr[next] + arr[right]
        if currentSum < target:
            smallerSumCount += right - next
            next += 1
        else:
            right -= 1
    
    return smallerSumCount

# Input
# 5
# 5
# -1 4 2 1 3
# Output
# 4
if __name__ == "__main__":
    target = int(input())
    arrayLength = int(input())
    array = [int(x) for x in input().split()]
    print(searchTriplets(array, target))